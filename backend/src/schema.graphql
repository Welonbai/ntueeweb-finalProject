enum Status {
    OFFLINE
    ONLINE
    STUDY
}

enum ErrorMessage {
    USER_EXIST
    USER_NOT_FOUND
    WRONG_PASSWORD
}

type User {
    name: String!
    password: String!
    friends: [User]!
    messages: [Message]!
    friendRequest: [User]!
    status: String!
    content: String
    ErrorMessage: String
}

type Message {
    from: String!
    to: String!
    context: String!
}

type Query {
    getFriends(name: String!): [User]!
    findUser(name: String!): User!
}

type Mutation {
    addFriend(name: String!, friendName: String!): User!
    acceptFriend(name: String!, friendName: String!): User!
    rejectFriend(name: String!, friendName: String!): User!
    removeFriend(name: String!, friendName: String!): User!
    register(name: String!, password: String!): User!
    logIn(name: String!, password: String!): User!
    statusUpdate(name: String!, status: String!, content: String): User!
    sendMessage(from: String!, to: String!, context: String!): User!
}

type Subscription {
    friendStatusUpdate(name: String!): User!
    friendUpdate(name: String!): User!
    messageReceived(name: String!): User!
}